{"ast":null,"code":"var _jsxFileName = \"/Users/taylorbirchem/Documents/GitHub/genderParty/src/components/pages/Result.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { HorizontalBar } from \"@reactchartjs/react-chart.js\";\n\nconst Result = () => {\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://62c91194d9ead251e8b7143e.mockapi.io/vote\").then(response => {\n      console.log(response.data);\n      setResults(response.data);\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n  const totalVotesA = results.map(item => item.partyA).reduce((prev, curr) => prev + curr, 0);\n  const totalVotesB = results.map(item => item.partyB).reduce((prev, curr) => prev + curr, 0);\n  const data = {\n    labels: [\"Girl\", \"Boy\"],\n    datasets: [{\n      label: \"# of Votes\",\n      data: [totalVotesA, totalVotesB, 0],\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54,162,235,0.4)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgb(29,137,211)\"],\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Result;","map":{"version":3,"sources":["/Users/taylorbirchem/Documents/GitHub/genderParty/src/components/pages/Result.js"],"names":["React","useEffect","useState","axios","HorizontalBar","Result","results","setResults","get","then","response","console","log","data","error","totalVotesA","map","item","partyA","reduce","prev","curr","totalVotesB","partyB","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;;AAGA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACK,GAAN,CAAU,kDAAV,EAA8DC,IAA9D,CACKC,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAEAN,MAAAA,UAAU,CAACG,QAAQ,CAACG,IAAV,CAAV;AACH,KALL,EAMKC,KAAD,IAAW;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KARL;AAUH,GAXQ,EAWN,EAXM,CAAT;AAaA,QAAMC,WAAW,GAAGT,OAAO,CACtBU,GADe,CACVC,IAAD,IAAUA,IAAI,CAACC,MADJ,EAEfC,MAFe,CAER,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAFf,EAEqB,CAFrB,CAApB;AAIA,QAAMC,WAAW,GAAGhB,OAAO,CACtBU,GADe,CACVC,IAAD,IAAUA,IAAI,CAACM,MADJ,EAEfJ,MAFe,CAER,CAACC,IAAD,EAAOC,IAAP,KAAgBD,IAAI,GAAGC,IAFf,EAEqB,CAFrB,CAApB;AAIA,QAAMR,IAAI,GAAG;AACTW,IAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,KAAT,CADC;AAETC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,KAAK,EAAE,YADX;AAEIb,MAAAA,IAAI,EAAE,CAACE,WAAD,EAAcO,WAAd,EAA2B,CAA3B,CAFV;AAGIK,MAAAA,eAAe,EAAE,CAAC,yBAAD,EAA4B,sBAA5B,CAHrB;AAIIC,MAAAA,WAAW,EAAE,CAAC,uBAAD,EAA0B,iBAA1B,CAJjB;AAKIC,MAAAA,WAAW,EAAE;AALjB,KADM;AAFD,GAAb;AAaA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CACH;AACIC,QAAAA,KAAK,EAAE;AACHC,UAAAA,WAAW,EAAE;AADV;AADX,OADG;AADH;AADI,GAAhB;AAYA,sBACI,uDACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAErB,IAArB;AAA2B,IAAA,OAAO,EAAEiB,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CAtDD;;AAwDA,eAAezB,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {HorizontalBar} from \"@reactchartjs/react-chart.js\";\n\n\nconst Result = () => {\n    const [results, setResults] = useState([]);\n\n    useEffect(() => {\n        axios.get(\"https://62c91194d9ead251e8b7143e.mockapi.io/vote\").then(\n            (response) => {\n                console.log(response.data);\n\n                setResults(response.data);\n            },\n            (error) => {\n                console.log(error);\n            }\n        );\n    }, []);\n\n    const totalVotesA = results\n        .map((item) => item.partyA)\n        .reduce((prev, curr) => prev + curr, 0);\n\n    const totalVotesB = results\n        .map((item) => item.partyB)\n        .reduce((prev, curr) => prev + curr, 0);\n\n    const data = {\n        labels: [\"Girl\", \"Boy\"],\n        datasets: [\n            {\n                label: \"# of Votes\",\n                data: [totalVotesA, totalVotesB, 0],\n                backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54,162,235,0.4)\"],\n                borderColor: [\"rgba(255, 99, 132, 1)\", \"rgb(29,137,211)\"],\n                borderWidth: 1,\n            },\n        ],\n    };\n\n    const options = {\n        scales: {\n            yAxes: [\n                {\n                    ticks: {\n                        beginAtZero: true,\n                    },\n                },\n            ],\n        },\n    };\n\n    return (\n        <>\n            <HorizontalBar data={data} options={options} />\n        </>\n    );\n};\n\nexport default Result;"]},"metadata":{},"sourceType":"module"}